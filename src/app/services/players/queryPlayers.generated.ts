/* eslint-disable */ /**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import * as Types from '../types.generated';

import { api } from '~/app/services/baseApi';
export type PlayersQueryVariables = Types.Exact<{ [key: string]: never; }>;


export type PlayersQuery = { __typename?: 'Query', players: Array<{ __typename?: 'Player', id: string, firstname: string, lastname: string, shortname: string, sex: Types.Sex, picture: { __typename?: 'Picture', url: string }, country: { __typename?: 'Country', code: string, picture: { __typename?: 'Picture', url: string } }, stats: { __typename?: 'Stats', rank: number, points: number, weight: number, height: number, age: number } }> };


export const PlayersDocument = `
    query Players {
  players {
    id
    firstname
    lastname
    shortname
    sex
    picture {
      url
    }
    country {
      code
      picture {
        url
      }
    }
    stats {
      rank
      points
      weight
      height
      age
    }
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  overrideExisting: true,
  endpoints: (build) => ({
    Players: build.query<PlayersQuery, PlayersQueryVariables | void>({
      query: (variables) => ({ document: PlayersDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { usePlayersQuery, useLazyPlayersQuery } = injectedRtkApi;

