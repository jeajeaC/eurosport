/* eslint-disable */ /**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import * as Types from '../../app/services/types.generated';

import { api } from '~/app/services/baseApi';
export type MatchesQueryVariables = Types.Exact<{ [key: string]: never; }>;


export type MatchesQuery = { __typename?: 'Query', matches: Array<{ __typename?: 'Match', id: string, startTime: string, endTime: string, players: Array<{ __typename?: 'Player', id: string, firstname: string, lastname: string }>, winner: { __typename?: 'Player', id: string } }> };


export const MatchesDocument = `
    query Matches {
  matches {
    id
    startTime
    endTime
    players {
      id
      firstname
      lastname
    }
    winner {
      id
    }
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  overrideExisting: true,
  endpoints: (build) => ({
    Matches: build.query<MatchesQuery, MatchesQueryVariables | void>({
      query: (variables) => ({ document: MatchesDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useMatchesQuery, useLazyMatchesQuery } = injectedRtkApi;

